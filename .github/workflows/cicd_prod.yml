name: Continuous integration

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
    branches: 
      - main
  push:
    branches:
      - main
  
jobs:  
  api-test: 
    runs-on: ubuntu-latest

    services:
      db_test:
        image: postgres:15
        env:
          POSTGRES_DB: database_caalliope_test
          POSTGRES_USER: caalliope_test
          POSTGRES_PASSWORD: caalliope_test*2024!
        ports:
          - 5432:5432
        options: --health-cmd "pg_isready -d database_caalliope_test -U caalliope_test" --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      DATABASE_HOST: localhost
      DATABASE_USERNAME: caalliope_test
      DATABASE_PASSWORD: caalliope_test*2024!
      DATABASE_NAME: database_caalliope_test

    steps:
      - name: "‚òÅÔ∏è checkout repository"
        uses: actions/checkout@v4

      - name: "üîß setup node"
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: "üì¶ install dependencies"
        run: npm install

      - name: "üîç run tests"
        run: npm run test:cov

      - name: "üîç lint code"
        run: npm run lint

  deploy:
    runs-on: ubuntu-latest
    needs: api-test
    if: github.ref == 'refs/heads/main'

    env:
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -f Dockerfile.dev -t api_caaliope_dev:latest .
      
      - name: Tag Docker image
        run: |
          docker tag api_caaliope_dev:latest paillassa33/api_caaliope_dev:latest

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Build and tag Docker image
        run: |
          docker tag paillassa33/api_caaliope_dev:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Update ECS service
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER }} --service ${{ secrets.ECS_SERVICE }} --force-new-deployment