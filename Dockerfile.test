# Utilisez une image Node officielle comme image de base
FROM node:18

# Variables d'environnement pour PostgreSQL
ENV POSTGRES_DB=database_caaliope_dev
ENV POSTGRES_USER=caaliope
ENV POSTGRES_PASSWORD=caaliope_dev*2024!

# Installer les dépendances nécessaires, incluant lsb-release
RUN apt-get update && \
    apt-get install -y wget gnupg lsb-release

# Ajouter le dépôt PostgreSQL
RUN echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list

# Ajouter la clé GPG pour le dépôt PostgreSQL
RUN wget -qO - https://www.postgresql.org/media/keys/ACCC4CF8.asc | tee /usr/share/keyrings/postgresql-archive-keyring.gpg > /dev/null

# Installer PostgreSQL
RUN apt-get update && apt-get install -y postgresql postgresql-contrib

# Créer un répertoire pour les uploads
RUN mkdir -p /usr/src/app/uploads/avatars

# Créer un répertoire pour l'application
RUN mkdir -p /usr/src/app

# Définir le répertoire de travail
WORKDIR /usr/src/app

# Copier les fichiers package.json et package-lock.json
COPY package*.json ./

# Installer les dépendances
RUN npm install

# Copier le reste des fichiers de l'application
COPY . .

# Exposer le port de l'application
EXPOSE 3001 

# Configurer PostgreSQL
RUN service postgresql start && \
    su postgres -c "psql -c \"CREATE USER $POSTGRES_USER WITH PASSWORD '$POSTGRES_PASSWORD';\"" && \
    su postgres -c "psql -c \"CREATE DATABASE $POSTGRES_DB OWNER $POSTGRES_USER;\"" && \
    echo "listen_addresses='*'" >> /etc/postgresql/12/main/postgresql.conf && \
    echo "host all all 0.0.0.0/0 md5" >> /etc/postgresql/12/main/pg_hba.conf

# Démarrer PostgreSQL et l'application
CMD service postgresql start && npm run dev
